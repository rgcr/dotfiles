#!/bin/zsh

# vi mode
set -o vi
# search on history with ctrl+r
bindkey '^R' history-incremental-search-backward
setopt histignorespace
# silent no match
unsetopt nomatch

#history
zmodload zsh/terminfo
if [ "$IS_MAC" -eq 1 ]; then
    bindkey '^[[A' history-substring-search-up
    bindkey '^[[B' history-substring-search-down
fi
#bindkey -M vicmd 'k' history-substring-search-up
#bindkey -M vicmd 'j' history-substring-search-down


##########################################################
#################### VARIABLES ###########################
##########################################################
export EDITOR=vim
export WORKON_HOME=$HOME/.venvs

##########################################################
################# PYTHON / DJANGO ########################
##########################################################
pmrs() { PORT=${1:-8080}; python manage.py runserver 0.0.0.0:${PORT}    }
pmrsp() { PORT=${1:-8080}; python manage.py runserver_plus 0.0.0.0:${PORT}  }

alias pm='python manage.py'
alias pmmm='python manage.py makemigrations'
alias pms='python manage.py syncdb'
alias pmm='python manage.py migrate'
alias pmsh='python manage.py shell'
alias pmshp='python manage.py shell_plus'

##########################################################
#####################  NVM  ##############################
##########################################################
export NVM_DIR=~/.nvm
if [ "$HAS_BREW" -eq 1 -a -e "$(brew --prefix nvm 2>/dev/null)/nvm.sh" ]; then
    source $(brew --prefix nvm)/nvm.sh
elif [ -e "$HOME/.nvm/nvm.sh" ]; then
    source $HOME/.nvm/nvm.sh
fi

##########################################################
##################### PROXY ##############################
##########################################################
setproxy() {
    p=${1}; np=${2:-localhost}
    no_proxy=$np; NO_PROXY=$np;
    http_proxy=$p; HTTP_PROXY=$p; https_proxy=$p; HTTPS_PROXY=$p; ftp_proxy=$p; FTP_PROXY=$p;
    export http_proxy https_proxy HTTP_PROXY HTTPS_PROXY ftp_proxy FTP_PROXY no_proxy NO_PROXY;
    __prompt_proxy
}

noproxy() {
    unset http_proxy https_proxy ftp_proxy no_proxy HTTP_PROXY HTTPS_PROXY FTP_PROXY NO_PROXY;
    echo "unset proxy!";
    # cut proxy info ( osx / gnu linux )
    RPS1=$( (echo $RPS1 2>&1 | sed -E 's|<proxy.+>||g' 2>/dev/null) || (echo $RPS1 2>&1 | sed -r 's|<proxy.+>||g' 2>/dev/null)  )
}
alias unsetproxy='noproxy'


##########################################################
############### translate-shell ##########################
##########################################################
alias etos='trans -brief en:es'
alias stoe='trans -brief es:en'

##########################################################
####################### VIFM #############################
##########################################################
alias vifm='vifm . .'

##########################################################
########## FUZZYFINDER AND VIM INTEGRATION ###############
##########################################################
if type "fzf" >/dev/null 2>&1; then
    export FZF_DEFAULT_COMMAND='ag -g ""'
    # runs fuzzyfinder if there is not parameters and
    # runs the original vim if we need to open specific files
    vim() { [ $# -gt 0 ] && $(which vim) $@ || $(which vim) $(fzf); }
fi


##########################################################
########## MPLAYER, PLAY ALL RECURSIVELY   ###############
##########################################################
playall() {
    # play music recursively with mplayer
    # e.g.
    #   playall  # play all mp3 in the current directory
    #   playall -t mp3 .
    #   playall -t avi /home
    #   playall -f mp4 /tmp /home .
    local _params=""
    local _ext="mp3"

    while [ $# -gt 0  ]; do
        case $1 in
            -t|-type) _ext=$2 ; shift ;;
            -*) _params="${_params}${1}" ;;
            *) break
        esac
        shift
    done
    [ ! -z "$@" ] && \
        find $@ -name "*.${_ext}" -exec mplayer ${_params} '{}' +
}

ydl(){
    youtube-dl --extract-audio --audio-format mp3 --audio-quality 5 --ignore-errors $@
}

