
# vi mode
set -o vi
# search on history with ctrl+r
bindkey '^R' history-incremental-search-backward
setopt histignorespace
# silent no match
unsetopt nomatch


###### VARIABLES #####
export EDITOR=vim
export WORKON_HOME=$HOME/.venvs

##### PYTHON / DJANGO  #####
pmrs() { PORT=${1:-8080}; python manage.py runserver 0.0.0.0:${PORT}    }
pmrsp() { PORT=${1:-8080}; python manage.py runserver_plus 0.0.0.0:${PORT}  }

alias pm='python manage.py'
alias pmmm='python manage.py makemigrations'
alias pms='python manage.py syncdb'
alias pmm='python manage.py migrate'
alias pmsh='python manage.py shell'
alias pmshp='python manage.py shell_plus'

##### NVM #####
export NVM_DIR=~/.nvm
if [[ $HAS_BREW -eq 1 && -e "$(brew --prefix nvm 2>/dev/null)/nvm.sh" ]]; then
    source $(brew --prefix nvm)/nvm.sh
elif [ -e "$HOME/.nvm/nvm.sh" ]; then
    source $HOME/.nvm/nvm.sh
fi

##### PROXY #####
setproxy() {
    p=${1}; np=${2:-localhost}
    no_proxy=$np; NO_PROXY=$np;
    http_proxy=$p; HTTP_PROXY=$p; https_proxy=$p; HTTPS_PROXY=$p; ftp_proxy=$p; FTP_PROXY=$p;
    export http_proxy https_proxy HTTP_PROXY HTTPS_PROXY ftp_proxy FTP_PROXY no_proxy NO_PROXY;
    __prompt_proxy
}

noproxy() {
    unset http_proxy https_proxy ftp_proxy no_proxy HTTP_PROXY HTTPS_PROXY FTP_PROXY NO_PROXY;
    echo "unset proxy!";
    # cut proxy info ( osx / gnu linux )
    RPS1=$( (echo $RPS1 2>&1 | sed -E 's|<proxy.+>||g' 2>/dev/null) || (echo $RPS1 2>&1 | sed -r 's|<proxy.+>||g' 2>/dev/null)  )
}

alias unsetproxy='noproxy'

##### TRANSLATION #####
alias etos='trans -brief en:es'
alias stoe='trans -brief es:en'

##### vifm #####
alias vifm='vifm . .'
