#################################
#           OPTIONS
#################################

# no delay to cancel prefix
set -s escape-time 0

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Colors!
#set -g default-terminal "rxvt-256color"
# set -g default-terminal 'screen-256color'
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

# history limit
set -g history-limit 10000

# Start counting at 1
set -g base-index 1
set-window-option -g pane-base-index 1
# renumber windows when a window is closed
set -g renumber-windows on

set-option -g allow-rename off
set -g display-panes-time 1000

# Set Window Title
set-window-option -g automatic-rename on
set -g set-titles on
set -g set-titles-string 'tmux: #T'

# Border Colors
# set -g pane-border-fg black
# set -g pane-active-border-fg black
set -g pane-border-style fg=black
set -g pane-active-border-style fg=black
set -g display-panes-colour white
set -g display-panes-active-colour red

set -g allow-passthrough on
set-option -g set-clipboard off


#################################
#           BINDINGS
#################################

set-option -g default-shell /bin/zsh

# C-a prefix (like screen)
unbind C-b
set -g prefix C-a
# C-z as prefix (better for my hand)
unbind C-z
set -g prefix2 C-z

# Allows us to use C-a a <command> to send commands to
# a TMUX session inside another TMUX session
bind-key a send-prefix

# 'r' - reload configuration
unbind R
bind R source-file ~/.tmux.conf \; display 'Config reloaded...'


# --------------------
# => sessions
# --------------------

# KILL TMUX SERVER
unbind Q
bind Q confirm-before -p "Confirm 'KILL TMUX'? (y/n)" "kill-server"

# kill session
unbind q
bind q confirm-before "kill-session"

# create session
bind C-n new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# detach session
unbind ^D
bind ^D detach

# list clients (sessions)
unbind *
bind * list-clients


# --------------------
# => windows
# --------------------

# create new window like screen and retain cwd
# unbind ^C
# bind ^C new-window
unbind c
bind c new-window -c "#{pane_current_path}"

# move to last active window
unbind Tab
bind Tab last-window

# go to next window
# unbind Space
# bind Space next-window
unbind Enter
bind Enter next-window

# go to previous window <Bspace>
unbind BSpace
bind BSpace previous-window

# jump to a pane (shows a visible indicator) {{{
unbind Space
bind Space display-panes
# }}}
#
# Reorder windows
# ctrl+sfhit + [left|right]
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# list windows
unbind w
bind w list-windows

# kill window
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# --------------------
# => panes
# --------------------

# vertical split
#unbind |
bind | split-window -h -l 50% -c "#{pane_current_path}"

# horizontal split
#unbind %
bind - split-window -v -l 50% -c "#{pane_current_path}"

# kill pane
unbind x
bind x confirm-before "kill-pane"
unbind X
bind X confirm-before "kill-pane"

# break pane
unbind b
bind b confirm-before "break-pane"

# join pane
unbind j
bind j command-prompt -p "join pane from "  "join-pane -s '%%'"

## send pane to
unbind s
bind s command-prompt -p "send pane to "  "join-pane -t '%%'"

# Change layout
unbind '"'
bind '"' next-layout


# --------------------
# => vi mode
# --------------------

# vi mode {{{
set-window-option -g mode-keys vi

## copy mode
unbind v
bind v copy-mode \; display 'Copy mode!'

## keeps the default binding also
bind [ copy-mode \; display 'Copy mode!'

# 'v' - start selection
bind-key -T copy-mode-vi v send-keys -X begin-selection

# 'y' - yank
bind-key -T copy-mode-vi y send-keys -X copy-selection

# 'p' - paste
unbind p
bind p paste-buffer

# XXX: I prefer choose-buffer, it also displays the list of buffers
# list all paste buffers {{{
# unbind l
# bind l list-buffers
# }}}

# Choose which buffer to paste interactively from a list
unbind l
unbind =
unbind P
bind P choose-buffer


# --------------------
# => others
# --------------------

# quick search
unbind /
bind / copy-mode \; send-key ?

# exec man
unbind m
bind m command-prompt -p "man:" "split-window 'exec man %%'"

# save history
unbind S
bind-key S command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -; save-buffer %1 ; delete-buffer'

# fzf and open file in nvim (like ctrlp)
unbind p
bind p split-window -v -c "#{pane_current_path}" "sh -c 'rg --files --hidden --ignore-vcs -L | fzf --preview \"bat --style=numbers --color=always {}\" | xargs -r -I {} tmux send-keys -t ! \"nvim {}\" C-m'"

# open ranger in a new pane
unbind e
# bind-key r split-window -h ranger
bind e split-window -h -c "#{pane_current_path}" "ranger"

#################################
#          SOURCES
#################################

# osx ?
if-shell 'test "$(uname)" = "Darwin" && test -e ~/.config/tmux/osx.conf' 'source-file ~/.config/tmux/osx.conf'

# load a theme
if-shell 'test -e ~/.config/tmux/theme.conf' 'source-file ~/.config/tmux/theme.conf'

# load private config
if-shell 'test -e ~/.config/tmux/private.conf' 'source-file ~/.config/tmux/private.conf'
