# Django {
pmrs() { PORT=${1:-8080}; python manage.py runserver 0.0.0.0:${PORT}    }
pmrsp() { PORT=${1:-8080}; python manage.py runserver_plus 0.0.0.0:${PORT}  }
# }

# Proxy {
setproxy() {
    p=${1}; np=${2:-localhost}
    no_proxy=$np; NO_PROXY=$np;
    http_proxy=$p; HTTP_PROXY=$p; https_proxy=$p; HTTPS_PROXY=$p; ftp_proxy=$p; FTP_PROXY=$p;
    export http_proxy https_proxy HTTP_PROXY HTTPS_PROXY ftp_proxy FTP_PROXY no_proxy NO_PROXY;
}

noproxy() {
    unset http_proxy https_proxy ftp_proxy no_proxy HTTP_PROXY HTTPS_PROXY FTP_PROXY NO_PROXY;
    echo "unset proxy!";
}
# }

# youtube-dl {
ydl(){
    youtube-dl --extract-audio --audio-format mp3 --audio-quality 5 --ignore-errors $@
}
# }

# mplayer {
playall() {
    # play music recursively with mplayer
    # e.g.
    #   playall  # play all mp3 in the current directory
    #   playall -t mp3 .
    #   playall -t avi /home
    #   playall -f mp4 /tmp /home .
    local _params=""
    local _ext="mp3"

    while [ $# -gt 0  ]; do
        case $1 in
            -t|-type) _ext=$2 ; shift ;;
            -*) _params="${_params}${1}" ;;
            *) break ;;
        esac
        shift
    done
    [ ! -z "${@}" ] && \
        find ${@} -name "*.${_ext}" -exec mplayer ${_params} '{}' +
}
# }

# tmux {
mux(){
    [ "${1}" = "show" ] && {
        { [ ! -z "${2}" -a -e "${HOME}/.tmuxinator/${2}.yml" ] && cat "${HOME}/.tmuxinator/${2}.yml" } || echo "Project ${2} not found" 1>&2
    } || {
        command tmuxinator "${@}"
    }
}

# }


# fzfÂ {
 # open selected file with the default editor
fe() {
  local files
  IFS=$'\n' files=($(fzf-tmux --query="$1" --multi --select-1 --exit-0))
  [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

 # fd - cd to selected directory
fd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

 # fda - including hidden directories
fda() {
  local dir
  dir=$(find ${1:-.} -type d 2> /dev/null | fzf +m) && cd "$dir"
}

 # fkill - kill process
fkill() {
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    kill -${1:-9} $pid
  fi
}

 # fh - repeat history
fh() {
  eval $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
}

# create git ignore files
gi() {
	curl -L -s https://www.gitignore.io/api/${@}
}

lyric(){
    curl -s --get "https://makeitpersonal.co/lyrics" --data-urlencode "artist=$1" --data-urlencode "title=$2"
}
